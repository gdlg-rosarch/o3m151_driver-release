/**
\mainpage

\htmlinclude manifest.html

ROS device driver for IFM o3m151.

\section read IFM o3m151 device driver

ROS device driver node that captures IFM o3m151 data and
publishes it to the \b sensor_msgs/PointCloud2 topic.

\subsection read_examples Examples

Read the IFM camera input socket as fast as possible.  Publish each
complete revolution to \b o3m151_points topic.

\verbatim
$ rosrun o3m151_driver o3m151_node
\endverbatim

Read previously captured IFM packets from dump.pcap file.
Publish messages to \b o3m151_points at the sensor rate.

Dump files can be grabbed by libpcap,
ethereal, wireshark, tcpdump, or the o3m151_driver vdump command.

\verbatim
$ rosrun o3m151_driver o3m151_node _pcap:=dump.pcap
\endverbatim

\subsection read_names ROS names

Node name: \b o3m151_node

Publishes: \b o3m151_points publish a 3D point cloud of the IFM camera.

Parameters:

 - \b ~pcap (string): PCAP dump input file name (default: use real device)
 - \b ~input/read_once (bool): if true, read input file only once
   (default false).
 - \b ~input/read_fast (bool): if true, read input file as fast as
   possible (default false).
 - \b ~input/repeat_delay (double): number of seconds to delay before
   repeating input file (default: 0.0).

\section vdump_command Vdump Command

The vdump command dumps raw data from the IFM camera in PCAP
format.  It is a shell script wrapper with some obscure options for
the powerful tcpdump command.

Other methods of acquiring PCAP data include using tcpdump directly,
wireshark and programming with libpcap.

\subsection vdump_usage Usage

\verbatim
  rosrun o3m151_driver vdump <file_prefix> [ <interface> ]

        <file_prefix>   file name to dump (with 3-digit number suffix)
        <interface>     interface to read from (default: "eth1")
\endverbatim

\subsection vdump_examples Examples

Dump IFM packets to a series of files named "pcap-000",
"pcap-001", etc. Type ^C when finished.

\verbatim
$ rosrun o3m151_driver vdump pcap- eth0
\endverbatim

*/
